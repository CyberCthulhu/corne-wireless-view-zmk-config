/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            label = "NEW_MACRO";
            #binding-cells = <0>;
            bindings = <&none>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
            //                    | GUI | LWR | SPC |   | ENT | BKSP | RSE |

            label = "Base";
            bindings = <
   &kp TAB  &kp Q  &kp W         &kp E  &kp R      &kp T      &kp Y          &kp U      &kp I    &kp O     &kp P       &kp ESC
&kp LSHIFT  &kp A  &kp S         &kp D  &kp F      &kp G      &kp H          &kp J      &kp K    &kp L  &kp SEMI       &kp SQT
 &kp LCTRL  &kp Z  &kp X         &kp C  &kp V      &kp B      &kp N          &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_GUI
                          &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RET  &kp BACKSPACE      &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |  7  |  8  |  9  |     | BKSP |
            // | BTCLR| LFT | UP  | DWN | RGT |     |   |     |  4  |  5  |  6  |     |      |
            // | SHFT |     |     |     |     |     |   |     |  1  |  2  |  3  |     | ALT  |
            //                    | GUI |     | SPC |   | ENT | BKSP|  0  |

            label = "Lower";
            bindings = <
   &kp TAB        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5     &kp N6         &kp N7  &kp N8  &kp N9  &kp N0       &kp BSPC
 &kp LSHFT      &kp LEFT        &kp UP      &kp DOWN     &kp RIGHT        &trans     &trans         &kp N4  &kp N5  &kp N6  &trans         &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &trans         &kp N1  &kp N2  &kp N3  &trans  &kp RIGHT_ALT
                                            &kp LGUI        &trans     &kp SPACE    &kp RET  &kp BACKSPACE  &kp N0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | ALT  |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT | BKSP|     |

            label = "Raise";
            bindings = <
  &kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
&kp LCTRL    &trans  &trans    &trans    &trans      &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT    &trans  &trans    &trans    &trans  &kp DELETE    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI    &trans   &kp SPACE      &kp RET   &kp RALT           &trans
            >;
        };
    };
};
